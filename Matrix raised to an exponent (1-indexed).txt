vector<vector<ll>> Matexp(vector<vector <ll>> A, ll p) {
	/* Does A^p */

	// If p==1, return the same matrix beacause obviously
	if (p == 1) {
		return A;
	}

	// Using divide and conquer algorithm (Dunno what's that, but using it)
	/*
	If p is odd then:
	    A^p=A * A^p-1
	else if p is even
	    A^p=A * A^((p/2)^2)
	*/

	if (p & 1) {
		// Cannot directly do A*Matexp(A,p-1) beacsuse A is not a number
		return Matmulti(A, Matexp(A, p - 1));
	}
	// if its even we create a matrix that stores A^(p/2)
	vector<vector<ll>> X = Matexp(A, p / 2);
	return Matmulti(X, X);
}